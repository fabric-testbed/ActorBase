openapi: 3.0.0
info:
  title: Fabric Controller API
  description: This is Fabric Controller API
  contact:
    email: kthare10@renci.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/fabric/controller
  description: SwaggerHub API Auto Mocking
security:
- bearerAuth: []
paths:
  /getVersion:
    get:
      summary: |
        Retrieve the current Controller version and list of versions of the API supported.
      description: "Retrieve the current Controller version and list of versions of\
        \ the API supported. \n"
      operationId: get_version_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /listResources:
    get:
      summary: |
        Retrieve a listing and description of available resources at various sites.
      description: "Retrieve a listing and description of available resources at various\
        \ sites. The resource listing and description provides sufficient information\
        \ for expermineter/clients to select among available resources. \n"
      operationId: list_resources_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /queryResources:
    post:
      summary: Query resource(s)
      description: |
        Request to query the availability of resources as described in the request. Request would be a graph ML or graph JSON describing the requested resources. On success, controller will return the availability of each requested resource.
      operationId: query_resources_post
      requestBody:
        $ref: '#/components/requestBodies/Request'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /create:
    post:
      summary: Create slice
      description: "Request to create slice as described in the request. Request would\
        \ be a graph ML or graph JSON describing the requested resources. Resources\
        \ may be requested to be created now or in future. On success, one or more\
        \ slivers are allocated, containing resources satisfying the request, and\
        \ assigned to the given slice. This API returns list and description of the\
        \ resources reserved for the slice in the form of manifest. Controller would\
        \ also trigger provisioning of these resources asynchronously on the appropriate\
        \ sites either now or in the future as requested. Experimenter can invoke\
        \ getManifest API to get the latest state of the requested resources. \n"
      operationId: create_post
      parameters:
      - name: resourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/Request'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /modify:
    post:
      summary: Modify slice or sliver
      description: |
        Request to modify sliver or slice as described in the request. Request would be a graph ML or graph JSON describing the requested resources for slice or a dictionary for sliver. On success, for one or more slivers are modified. This API returns list and description of the resources reserved for the slice in the form of manifest. Controller would also trigger provisioning of the new resources on the appropriate sites either now or in the future based as requested. Modify operations may include add/delete/modify a container/VM/Baremetal server/network or other resources to the sliver or slice.
      operationId: modify_post
      parameters:
      - name: resourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/Request'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /renew:
    post:
      summary: Renew slice or sliver
      description: |
        Request to extend sliver or slice be renewed with their expiration extended. If possible, the controller should extend the slivers to the requested expiration time, or to a sooner time if policy limits apply.
      operationId: renew_post
      parameters:
      - name: resourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: newLeaseEndTime
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /delete:
    delete:
      summary: Delete slice or sliver.
      description: |
        Request to delete sliver or slice. On success, resources associated with slice or sliver are stopped if necessary, de-provisioned and un-allocated at the respective sites.
      operationId: delete_delete
      parameters:
      - name: resourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /getManifest:
    get:
      summary: Retrieve manifest for the slice or sliver
      description: |
        Retrieve a manifest describing the resources contained by the name entities, e.g. a single slice or a set of the slivers in a slice. This listing and description should be sufficiently descriptive to allow experimenters to use the resources.
      operationId: get_manifest_get
      parameters:
      - name: resourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
  /status:
    get:
      summary: Retrieve status of a slice or sliver(s)
      description: |
        Retrieve the status of a slice or sliver(s). Status would include dynamic reservation or instantiation information. This API is used to provide updates on the state of the resources after the completion of create, which began to asynchronously provision the resources. The response would contain relatively dynamic data, not descriptive data as returned in the manifest.
      operationId: status_get
      parameters:
      - name: resourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: controller.swagger_server.controllers.default_controller
components:
  schemas:
    Success:
      required:
      - code
      - message
      type: object
      properties:
        code:
          minimum: 0
          type: integer
          description: status code
        message:
          type: string
          description: status message
        value:
          type: object
          description: JSON object
        version:
          type: string
          description: Actor version
      example:
        code: 0
        message: message
        value: {}
        version: version
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Permission Denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unexpected:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
  parameters:
    resourceID:
      name: resourceID
      in: query
      required: true
      style: form
      explode: true
      schema:
        type: string
    newLeaseEndTime:
      name: newLeaseEndTime
      in: query
      required: true
      style: form
      explode: true
      schema:
        type: string
  requestBodies:
    Request:
      content:
        text/plain:
          schema:
            type: string
      required: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: controller.swagger_server.controllers.authorization_controller.check_bearerAuth

